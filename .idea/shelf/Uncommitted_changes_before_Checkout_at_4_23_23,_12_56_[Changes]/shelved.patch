Index: app/src/main/java/edu/northeastern/nucs5520sp_musiclyicsapp/final_project/adapters/ImportResultAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package edu.northeastern.nucs5520sp_musiclyicsapp.final_project.adapters;\n\nimport android.content.Context;\nimport android.view.LayoutInflater;\nimport android.view.View;\nimport android.view.ViewGroup;\nimport android.widget.TextView;\n\nimport androidx.annotation.NonNull;\nimport androidx.recyclerview.widget.RecyclerView;\n\nimport java.util.ArrayList;\n\nimport edu.northeastern.nucs5520sp_musiclyicsapp.R;\nimport edu.northeastern.nucs5520sp_musiclyicsapp.final_project.model.GeniusSong;\n\npublic class ImportResultAdapter extends RecyclerView.Adapter<ImportResultAdapter.ImportResultViewHolder> {\n\n    private final Context context;\n    private final ArrayList<GeniusSong> outputList;\n\n    public ImportResultAdapter(Context context, ArrayList<GeniusSong> outputList) {\n        this.context = context;\n        this.outputList = outputList;\n    }\n\n    @NonNull\n    @Override\n    public ImportResultAdapter.ImportResultViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\n        LayoutInflater inflater = LayoutInflater.from(context);\n        View view = inflater.inflate(R.layout.library_card_design, parent, false);\n        return new ImportResultAdapter.ImportResultViewHolder(view);\n    }\n\n    @Override\n    public void onBindViewHolder(@NonNull ImportResultAdapter.ImportResultViewHolder holder, int position) {\n        holder.tvArtist.setText(outputList.get(position).getSongName());\n        ArrayList<String> artistsList = outputList.get(position).getArtistsList();\n        // Convert artists ArrayList into a long string.\n        StringBuilder artistsStringBuilder = new StringBuilder();\n        if (!artistsList.isEmpty()) {\n            if (artistsList.size() == 1) {\n                artistsStringBuilder = new StringBuilder(artistsList.get(0));\n            }\n            else {\n                for (String artist: artistsList) {\n                    artistsStringBuilder.append(artist).append(\", \");\n                }\n            }\n        }\n        String artists = artistsStringBuilder.toString();\n        holder.tvArtist.setText(artists);\n        holder.tvLyricsEditor.setText(\"Genius\");\n    }\n\n    @Override\n    public int getItemCount() {\n        return 0;\n    }\n\n    public static class ImportResultViewHolder extends RecyclerView.ViewHolder {\n\n        TextView tvSongName, tvArtist, tvLyricsEditor;\n\n        public ImportResultViewHolder(@NonNull View itemView) {\n            super(itemView);\n\n            tvSongName = itemView.findViewById(R.id.library_songTitle);\n            tvArtist = itemView.findViewById(R.id.library_artist);\n            tvLyricsEditor = itemView.findViewById(R.id.library_lyricEditor);\n\n\n        }\n    }\n}\n
===================================================================
diff --git a/app/src/main/java/edu/northeastern/nucs5520sp_musiclyicsapp/final_project/adapters/ImportResultAdapter.java b/app/src/main/java/edu/northeastern/nucs5520sp_musiclyicsapp/final_project/adapters/ImportResultAdapter.java
--- a/app/src/main/java/edu/northeastern/nucs5520sp_musiclyicsapp/final_project/adapters/ImportResultAdapter.java	
+++ b/app/src/main/java/edu/northeastern/nucs5520sp_musiclyicsapp/final_project/adapters/ImportResultAdapter.java	
@@ -34,7 +34,7 @@
 
     @Override
     public void onBindViewHolder(@NonNull ImportResultAdapter.ImportResultViewHolder holder, int position) {
-        holder.tvArtist.setText(outputList.get(position).getSongName());
+        holder.tvSongName.setText(outputList.get(position).getSongName());
         ArrayList<String> artistsList = outputList.get(position).getArtistsList();
         // Convert artists ArrayList into a long string.
         StringBuilder artistsStringBuilder = new StringBuilder();
@@ -49,13 +49,14 @@
             }
         }
         String artists = artistsStringBuilder.toString();
+        //holder.tvSongName.setText();
         holder.tvArtist.setText(artists);
         holder.tvLyricsEditor.setText("Genius");
     }
 
     @Override
     public int getItemCount() {
-        return 0;
+        return outputList.size();
     }
 
     public static class ImportResultViewHolder extends RecyclerView.ViewHolder {
Index: app/src/main/java/edu/northeastern/nucs5520sp_musiclyicsapp/final_project/ImportService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package edu.northeastern.nucs5520sp_musiclyicsapp.final_project;\n\nimport static edu.northeastern.nucs5520sp_musiclyicsapp.final_project.App.CHANNEL_ID;\n\nimport androidx.annotation.Nullable;\nimport androidx.appcompat.app.AppCompatActivity;\nimport androidx.core.app.ActivityCompat;\nimport androidx.core.app.NotificationCompat;\nimport androidx.core.app.NotificationManagerCompat;\n\nimport android.Manifest;\nimport android.annotation.SuppressLint;\nimport android.app.Notification;\nimport android.app.PendingIntent;\nimport android.app.Service;\nimport android.content.Intent;\nimport android.content.SharedPreferences;\nimport android.content.pm.PackageManager;\nimport android.os.Bundle;\nimport android.os.IBinder;\nimport android.util.Log;\nimport android.widget.Toast;\n\nimport java.util.ArrayList;\nimport java.util.regex.Matcher;\nimport java.util.regex.Pattern;\n\nimport edu.northeastern.nucs5520sp_musiclyicsapp.R;\nimport edu.northeastern.nucs5520sp_musiclyicsapp.final_project.model.GeniusSong;\nimport edu.northeastern.nucs5520sp_musiclyicsapp.final_project.model.SpotifyArtist;\nimport edu.northeastern.nucs5520sp_musiclyicsapp.final_project.model.SpotifySong;\n\npublic class ImportService extends Service {\n\n    private ArrayList<SpotifySong> spotifySongsList;\n    private SpotifyService spotifyService;\n    private LyricsService lyricsService;\n    private ArrayList<GeniusSong> outputList;\n\n    // Credit: https://towardsdatascience.com/using-the-spotify-api-with-your-android-application-the-essentials-1a3c1bc36b9e\n    // Above credit for getting the Spotify songs in the playlist using spotify API.\n    @Override\n    public int onStartCommand(Intent intent, int flags, int startId) {\n\n        String sharedPlaylistLink = intent.getStringExtra(\"Shared Playlist Link\");\n\n        spotifyService = new SpotifyService(getApplicationContext());\n        lyricsService = new LyricsService(getApplicationContext());\n\n        outputList = new ArrayList<>();\n\n        SharedPreferences sharedPreferences = this.getSharedPreferences(\"SPOTIFY\", 0);\n        // If sharedPreferences is empty, user hasn't authorized this app to access their spotify account.\n        // Go to ActivitySpotifyAuth.\n        Log.d(\"Spotify token\", sharedPreferences.getString(\"token\",\"\"));\n//        if (sharedPreferences.getString(\"token\",\"\").equals(\"\")) {\n//            Log.d(\"Inside If\", \"Inside the if clause in ImportService when no Spotify token\");\n//            Toast.makeText(this, \"Need authorization with your Spotify account to read your playlist information\", Toast.LENGTH_SHORT).show();\n//            Intent intentAuth = new Intent(ImportService.this, ActivitySpotifyAuth.class);\n//            intentAuth.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\n//            startActivity(intentAuth);\n//        }\n\n        Toast.makeText(this, \"Need authorization with your Spotify account to read your playlist information\", Toast.LENGTH_SHORT).show();\n        Intent intentAuth = new Intent(ImportService.this, ActivitySpotifyAuth.class);\n        intentAuth.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\n        startActivity(intentAuth);\n\n        getTracks(sharedPlaylistLink);\n\n        return START_NOT_STICKY;\n    }\n\n    // Whatever needs to be done with the songs obtained need to happen right below\n    // songsList = songService.getSongs(); (because of asynchronous nature of the request)\n    private void getTracks(String sharedPlaylistLink) {\n        // Extract the playlist ID from sharedPlaylistLink.\n        Pattern pattern = Pattern.compile(\"/playlist/(.*?)\\\\?si=\");\n        Matcher matcher = pattern.matcher(sharedPlaylistLink);\n        String playlistId = \"\";\n        if (matcher.find()) {\n            playlistId = matcher.group(1);\n        }\n\n        spotifyService.getSongsFromPlaylist(playlistId, 100, 0, new VolleyCallback() {\n            @Override\n            public void onSuccess(boolean finished) {\n                spotifySongsList = spotifyService.getSongs();\n\n                // Post a notification indicating that our app has started to extract songs from Spotify Playlist using Spotify API.\n                NotificationCompat.Builder notificationBuilder = new NotificationCompat.Builder(ImportService.this, CHANNEL_ID)\n                        .setContentTitle(\"Reading Playlist Content\")\n                        .setContentText(\"Reading the songs in your shared Spotify playlist...\")\n                        .setSmallIcon(R.mipmap.ic_launcher_music);\n\n                startForeground(1, notificationBuilder.build());\n\n                // Songs in songsList can be used as input to the Genius API.\n                if (finished) {\n\n                    // Loop through the songs in songsList and extract lyrics for each song.\n                    for (SpotifySong spotifySong : spotifySongsList) {\n                        // Song info setup.\n                        String songName = spotifySong.getSongName();\n                        ArrayList<String> artistsList = new ArrayList<>();\n                        for (SpotifyArtist spotifyArtist : spotifySong.getArtists()) {\n                            artistsList.add(spotifyArtist.getArtistName());\n                        }\n                        // Get the GeniusSong with lyrics inside.\n                        lyricsService.getLyricsForSong(songName, artistsList, new VolleyCallback() {\n                            @Override\n                            public void onSuccess(boolean finished) {\n\n                            }\n\n                            @SuppressLint(\"DefaultLocale\")\n                            @Override\n                            public void onLyricsSuccess(GeniusSong outputGeniusSong) {\n                                Log.d(\"output received in ImportService's callback\", outputGeniusSong.getLyrics());\n\n                                outputList.add(outputGeniusSong);\n\n                                // Change the notification to show progress in extracting song lyrics with Genius API and scraping Genius.com.\n                                notificationBuilder.setContentTitle(\"Getting Lyrics\")\n                                        .setContentText(String.format(\"Lyrics extraction progress: %d / %d\", outputList.size(), spotifySongsList.size()));\n                                if (ActivityCompat.checkSelfPermission(ImportService.this, Manifest.permission.POST_NOTIFICATIONS) != PackageManager.PERMISSION_GRANTED) {\n                                    // TODO: Consider calling\n                                    //    ActivityCompat#requestPermissions\n                                    // here to request the missing permissions, and then overriding\n                                    //   public void onRequestPermissionsResult(int requestCode, String[] permissions,\n                                    //                                          int[] grantResults)\n                                    // to handle the case where the user grants the permission. See the documentation\n                                    // for ActivityCompat#requestPermissions for more details.\n                                    return;\n                                }\n                                NotificationManagerCompat.from(ImportService.this).notify(1, notificationBuilder.build());\n                                Log.d(\"outputList size\", String.valueOf(outputList.size()));\n\n                                // If the size of the outputList is the same as the size of the spotifySongList, we know lyrics extraction is complete.\n                                if (outputList.size() == spotifySongsList.size()) {\n                                    // Cancel the old notification displaying the import progress and create a new one that is clickable.\n                                    NotificationManagerCompat.from(ImportService.this).cancel(1);\n                                    // If user clicks on the notification, lead to the new Activity displaying import results.\n                                    Intent intent = new Intent(ImportService.this, ActivityImportResult.class);\n                                    Log.d(\"outputList second song name\", outputList.get(1).getLyrics());\n                                    intent.putParcelableArrayListExtra(\"outputList\", outputList);\n                                    PendingIntent pendingIntent = PendingIntent.getActivity(ImportService.this, 0, intent, 0);\n                                    NotificationCompat.Builder notificationBuilderComplete = new NotificationCompat.Builder(ImportService.this, CHANNEL_ID)\n                                            .setContentTitle(\"Import and Lyrics Extraction Complete\")\n                                            .setContentText(\"Click this to check out the results\")\n                                            .setSmallIcon(R.mipmap.ic_launcher_music)\n                                            .setContentIntent(pendingIntent);\n                                    NotificationManagerCompat.from(ImportService.this).notify(2, notificationBuilderComplete.build());\n                                }\n                            }\n                        });\n\n                        // Cope with Genius API's rate limit for search, which is 1 per second.\n                        try {\n                            Thread.sleep(1000);\n                        } catch (InterruptedException e) {\n                            e.printStackTrace();\n                        }\n                    }\n\n                }\n            }\n\n            @Override\n            public void onLyricsSuccess(GeniusSong geniusSong) {\n\n            }\n        });\n    }\n\n    @Nullable\n    @Override\n    public IBinder onBind(Intent intent) {\n        return null;\n    }\n}
===================================================================
diff --git a/app/src/main/java/edu/northeastern/nucs5520sp_musiclyicsapp/final_project/ImportService.java b/app/src/main/java/edu/northeastern/nucs5520sp_musiclyicsapp/final_project/ImportService.java
--- a/app/src/main/java/edu/northeastern/nucs5520sp_musiclyicsapp/final_project/ImportService.java	
+++ b/app/src/main/java/edu/northeastern/nucs5520sp_musiclyicsapp/final_project/ImportService.java	
@@ -137,12 +137,13 @@
                                 Log.d("outputList size", String.valueOf(outputList.size()));
 
                                 // If the size of the outputList is the same as the size of the spotifySongList, we know lyrics extraction is complete.
+                                Log.d("--------spotifySong list size", String.valueOf(spotifySongsList.size()));
                                 if (outputList.size() == spotifySongsList.size()) {
                                     // Cancel the old notification displaying the import progress and create a new one that is clickable.
                                     NotificationManagerCompat.from(ImportService.this).cancel(1);
                                     // If user clicks on the notification, lead to the new Activity displaying import results.
                                     Intent intent = new Intent(ImportService.this, ActivityImportResult.class);
-                                    Log.d("outputList second song name", outputList.get(1).getLyrics());
+                                    //Log.d("outputList second song name", outputList.get(1).getLyrics());
                                     intent.putParcelableArrayListExtra("outputList", outputList);
                                     PendingIntent pendingIntent = PendingIntent.getActivity(ImportService.this, 0, intent, 0);
                                     NotificationCompat.Builder notificationBuilderComplete = new NotificationCompat.Builder(ImportService.this, CHANNEL_ID)
Index: app/src/main/java/edu/northeastern/nucs5520sp_musiclyicsapp/final_project/ActivityImportResult.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package edu.northeastern.nucs5520sp_musiclyicsapp.final_project;\n\nimport androidx.appcompat.app.AppCompatActivity;\nimport androidx.recyclerview.widget.LinearLayoutManager;\nimport androidx.recyclerview.widget.RecyclerView;\n\nimport android.content.Intent;\nimport android.os.Bundle;\nimport android.util.Log;\n\nimport java.util.ArrayList;\n\nimport edu.northeastern.nucs5520sp_musiclyicsapp.R;\nimport edu.northeastern.nucs5520sp_musiclyicsapp.final_project.model.GeniusSong;\nimport edu.northeastern.nucs5520sp_musiclyicsapp.final_project.adapters.ImportResultAdapter;\n\npublic class ActivityImportResult extends AppCompatActivity {\n\n    private ArrayList<GeniusSong> outputList;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_import_result);\n\n        // Obtain the outputList that contains GeniusSongs object\n        outputList = getIntent().getParcelableArrayListExtra(\"outputList\");\n\n        Log.d(\"outputList second song lyrics received\", outputList.get(1).getLyrics());\n        stopService();\n\n        // Create the RecyclerView object and connect with the UI object.\n        RecyclerView recyclerView = findViewById(R.id.libraryRecyclerView);\n\n        ImportResultAdapter adapter = new ImportResultAdapter(this, outputList);\n        adapter.notifyDataSetChanged();\n        recyclerView.setAdapter(adapter);\n        recyclerView.setLayoutManager(new LinearLayoutManager(this));\n\n    }\n\n    // Credit: https://youtu.be/FbpD5RZtbCc\n    public void stopService() {\n        Intent serviceIntent = new Intent(this, ImportService.class);\n        stopService(serviceIntent);\n    }\n\n\n\n\n}
===================================================================
diff --git a/app/src/main/java/edu/northeastern/nucs5520sp_musiclyicsapp/final_project/ActivityImportResult.java b/app/src/main/java/edu/northeastern/nucs5520sp_musiclyicsapp/final_project/ActivityImportResult.java
--- a/app/src/main/java/edu/northeastern/nucs5520sp_musiclyicsapp/final_project/ActivityImportResult.java	
+++ b/app/src/main/java/edu/northeastern/nucs5520sp_musiclyicsapp/final_project/ActivityImportResult.java	
@@ -25,14 +25,18 @@
 
         // Obtain the outputList that contains GeniusSongs object
         outputList = getIntent().getParcelableArrayListExtra("outputList");
+        Log.d("-------outputlist", String.valueOf(outputList.size()));
+        Log.d("-----get item 1", outputList.get(0).toString());
 
-        Log.d("outputList second song lyrics received", outputList.get(1).getLyrics());
+        //Log.d("outputList second song lyrics received", outputList.get(1).getLyrics());
         stopService();
 
         // Create the RecyclerView object and connect with the UI object.
         RecyclerView recyclerView = findViewById(R.id.libraryRecyclerView);
 
         ImportResultAdapter adapter = new ImportResultAdapter(this, outputList);
+        Log.d("outputList size", String.valueOf(outputList.size()));
+        Log.d("import result size", String.valueOf(adapter.getItemCount()));
         adapter.notifyDataSetChanged();
         recyclerView.setAdapter(adapter);
         recyclerView.setLayoutManager(new LinearLayoutManager(this));
