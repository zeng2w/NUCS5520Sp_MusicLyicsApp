Index: app/src/main/java/edu/northeastern/nucs5520sp_musiclyicsapp/final_project/ActivitySpotifyAuth.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package edu.northeastern.nucs5520sp_musiclyicsapp.final_project;\n\nimport androidx.annotation.Nullable;\nimport androidx.appcompat.app.AppCompatActivity;\n\nimport com.android.volley.RequestQueue;\nimport com.android.volley.toolbox.Volley;\n\nimport com.spotify.sdk.android.auth.AuthorizationClient;\nimport com.spotify.sdk.android.auth.AuthorizationRequest;\nimport com.spotify.sdk.android.auth.AuthorizationResponse;\n\nimport android.content.Intent;\nimport android.content.SharedPreferences;\nimport android.os.Bundle;\nimport android.util.Log;\nimport android.view.Window;\nimport android.widget.Toast;\n\nimport java.util.Objects;\n\nimport edu.northeastern.nucs5520sp_musiclyicsapp.R;\n\npublic class ActivitySpotifyAuth extends AppCompatActivity {\n\n    /*\n    Credit:\n    Official tutorial for Android SDK: https://developer.spotify.com/documentation/android/tutorials/getting-started#authorize-your-application\n    Add .aar App Remote SDK to project: https://stackoverflow.com/questions/67724242/how-to-import-aar-module-on-android-studio-4-2\n     */\n\n    /*\n    There are two packages: one for authorization, one for music control in your app.\n    Authorization is needed before making Web API calls. There are 2 separate .aar files for remote-control and\n    auth. Add them to libs folder under app folder in the Project view in Android Studio (upper left corner, where\n    it should say \"Android\" by default).\n    Credit:\n    For authorization: https://developer.spotify.com/documentation/android/tutorials/authorization\n    The info for keystore is stored in my Apple Notes.\n     */\n\n    // Credit: https://towardsdatascience.com/using-the-spotify-api-with-your-android-application-the-essentials-1a3c1bc36b9e\n    private SharedPreferences.Editor editor;\n    private SharedPreferences mSharedPreferences;\n\n    private RequestQueue queue;\n\n    // Set up Spotify credentials.\n    // Client ID is found in your dashboard at developer.spotify.com.\n    private static final String CLIENT_ID = \"ab70ca7aa15e44d7b2650148832ae585\";\n    private static final String REDIRECT_URI = \"edu.northeastern.nucs5520spmusiclyicsapp://callback\";\n    private static final int REQUEST_CODE = 1337;\n    // Credit: https://developer.spotify.com/documentation/web-api/concepts/scopes\n    private static final String SCOPES = \"playlist-read-private, playlist-read-collaborative\";\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        requestWindowFeature(Window.FEATURE_NO_TITLE);\n        Objects.requireNonNull(getSupportActionBar()).hide();\n        setContentView(R.layout.activity_spotify_auth);\n\n        authenticateSpotify();\n\n        mSharedPreferences = this.getSharedPreferences(\"SPOTIFY\", 0);\n        queue = Volley.newRequestQueue(this);\n    }\n\n    /**\n     * Prompt the user to give permission to our app to connect to their Spotify account and grab\n     * relevant information.\n     * Credit: https://developer.spotify.com/documentation/android/tutorials/authorization\n     * https://towardsdatascience.com/using-the-spotify-api-with-your-android-application-the-essentials-1a3c1bc36b9e\n     * (Section: Logging In)\n     */\n    private void authenticateSpotify() {\n        AuthorizationRequest.Builder builder =\n                new AuthorizationRequest.Builder(CLIENT_ID, AuthorizationResponse.Type.TOKEN, REDIRECT_URI);\n\n        builder.setScopes(new String[]{SCOPES});\n        AuthorizationRequest request = builder.build();\n\n        AuthorizationClient.openLoginActivity(this, REQUEST_CODE, request);\n    }\n\n    @Override\n    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {\n        super.onActivityResult(requestCode, resultCode, data);\n\n        // Check if result comes from the correct activity\n        if (requestCode == REQUEST_CODE) {\n            AuthorizationResponse response = AuthorizationClient.getResponse(resultCode, data);\n\n            switch (response.getType()) {\n                //Response was successful and contains auth token.\n                case TOKEN:\n                    editor = getSharedPreferences(\"SPOTIFY\", 0).edit();\n                    editor.putString(\"token\", response.getAccessToken());\n                    Log.d(\"STARTING\", \"GOT AUTH TOKEN\");\n                    editor.apply();\n                    break;\n\n                // Auth flow returned an error.\n                case ERROR:\n                    Toast.makeText(this, \"Unable to obtain auth token\", Toast.LENGTH_SHORT).show();\n                    break;\n\n                // Most likely auth flow was canceled\n                default:\n                    Toast.makeText(this, \"User authentication canceled\", Toast.LENGTH_SHORT).show();\n            }\n        }\n\n        finish();\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/edu/northeastern/nucs5520sp_musiclyicsapp/final_project/ActivitySpotifyAuth.java b/app/src/main/java/edu/northeastern/nucs5520sp_musiclyicsapp/final_project/ActivitySpotifyAuth.java
--- a/app/src/main/java/edu/northeastern/nucs5520sp_musiclyicsapp/final_project/ActivitySpotifyAuth.java	(revision fcccbf6fe78b4926d5f12d3d641fcdc8332957a8)
+++ b/app/src/main/java/edu/northeastern/nucs5520sp_musiclyicsapp/final_project/ActivitySpotifyAuth.java	(date 1682205281732)
@@ -47,7 +47,7 @@
 
     // Set up Spotify credentials.
     // Client ID is found in your dashboard at developer.spotify.com.
-    private static final String CLIENT_ID = "ab70ca7aa15e44d7b2650148832ae585";
+    private static final String CLIENT_ID = "c233e9cd9d6f47b48066547309fbc6b0";
     private static final String REDIRECT_URI = "edu.northeastern.nucs5520spmusiclyicsapp://callback";
     private static final int REQUEST_CODE = 1337;
     // Credit: https://developer.spotify.com/documentation/web-api/concepts/scopes
